The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
--------------------------------------------------------------------------
mpiexec has exited due to process rank 1 with PID 35540 on
node s73 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpiexec (as reported here).

You can avoid this message by specifying -quiet on the mpiexec command line.
--------------------------------------------------------------------------
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
--------------------------------------------------------------------------
mpiexec has exited due to process rank 0 with PID 35641 on
node s73 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpiexec (as reported here).

You can avoid this message by specifying -quiet on the mpiexec command line.
--------------------------------------------------------------------------
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
--------------------------------------------------------------------------
mpiexec has exited due to process rank 1 with PID 35745 on
node s73 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpiexec (as reported here).

You can avoid this message by specifying -quiet on the mpiexec command line.
--------------------------------------------------------------------------
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
--------------------------------------------------------------------------
mpiexec has exited due to process rank 1 with PID 35847 on
node s73 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpiexec (as reported here).

You can avoid this message by specifying -quiet on the mpiexec command line.
--------------------------------------------------------------------------
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
--------------------------------------------------------------------------
mpiexec has exited due to process rank 7 with PID 35956 on
node s73 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpiexec (as reported here).

You can avoid this message by specifying -quiet on the mpiexec command line.
--------------------------------------------------------------------------
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
The matrix-dimensions has to be eqally dividable with the number of processes
--------------------------------------------------------------------------
mpiexec has exited due to process rank 11 with PID 36062 on
node s73 exiting improperly. There are three reasons this could occur:

1. this process did not call "init" before exiting, but others in
the job did. This can cause a job to hang indefinitely while it waits
for all processes to call "init". By rule, if one process calls "init",
then ALL processes must call "init" prior to termination.

2. this process called "init", but exited without calling "finalize".
By rule, all processes that call "init" MUST call "finalize" prior to
exiting or it will be considered an "abnormal termination"

3. this process called "MPI_Abort" or "orte_abort" and the mca parameter
orte_create_session_dirs is set to false. In this case, the run-time cannot
detect that the abort call was an abnormal termination. Hence, the only
error message you will receive is this one.

This may have caused other processes in the application to be
terminated by signals sent by mpiexec (as reported here).

You can avoid this message by specifying -quiet on the mpiexec command line.
--------------------------------------------------------------------------
